#cloud-config
autoinstall:
  version: 1
  
  # Basic locale settings
  locale: en_US.UTF-8
  keyboard:
    layout: us
  
  # Network configuration - prepare for NetworkManager transition
  network:
    version: 2
    renderer: NetworkManager
    ethernets:
      # Match any ethernet interface
      eth:
        match:
          name: "e*"
        dhcp4: true
        dhcp6: false
    wifis:
      # Match any wifi interface  
      wlan:
        match:
          name: "w*"
        dhcp4: true
        dhcp6: false
        access-points: {}
  
  # Storage - whole disk, no LVM, 8GB swap
  storage:
    config:
      - type: disk
        id: primary-disk
        match:
          size: largest
        wipe: superblock-recursive
        preserve: false
        ptable: gpt
      
      # EFI System Partition (512MB)
      - type: partition
        id: efi-partition
        device: primary-disk
        size: 512MB
        wipe: superblock
        flag: boot
        number: 1
        preserve: false
      
      # Boot partition (1GB)
      - type: partition
        id: boot-partition
        device: primary-disk
        size: 1GB
        wipe: superblock
        number: 2
        preserve: false
      
      # Swap partition (8GB)
      - type: partition
        id: swap-partition
        device: primary-disk
        size: 8GB
        wipe: superblock
        number: 3
        preserve: false
      
      # Root partition (remaining space)
      - type: partition
        id: root-partition
        device: primary-disk
        size: -1
        wipe: superblock
        number: 4
        preserve: false
      
      # Filesystems
      - type: format
        id: efi-fs
        fstype: fat32
        volume: efi-partition
        preserve: false
      
      - type: format
        id: boot-fs
        fstype: ext4
        volume: boot-partition
        preserve: false
      
      - type: format
        id: swap-fs
        fstype: swap
        volume: swap-partition
        preserve: false
      
      - type: format
        id: root-fs
        fstype: ext4
        volume: root-partition
        preserve: false
      
      # Mount points
      - type: mount
        id: efi-mount
        device: efi-fs
        path: /boot/efi
      
      - type: mount
        id: boot-mount
        device: boot-fs
        path: /boot
      
      - type: mount
        id: swap-mount
        device: swap-fs
        path: none
      
      - type: mount
        id: root-mount
        device: root-fs
        path: /
  
  # Create ucadmin user
  identity:
    hostname: UC-1
    username: ucadmin
    # Password: "MagicUnicorn!8-)" 
    password: '$6$rounds=4096$saltsalt$8LMv.RBLc7RGjN8Dk5F9HJNwKp1MH7TQ.xS2yV4cG3A9L6mN8oP0qR1sT2uV3wX4yZ5aB6cD7eF8gH9iJ0kL1m'
    realname: 'UnicornCommander Admin'
  
  # Enable SSH
  ssh:
    install-server: true
    allow-pw: true
  
  # Package selection - essentials + NetworkManager + KDE apps
  packages:
    # System essentials
    - openssh-server
    - curl
    - wget
    - git
    - vim
    - htop
    - tree
    - unzip
    - build-essential
    
    # Network management
    - network-manager
    - network-manager-gnome
    
    # Development tools
    - python3
    - python3-pip
    - python3-venv
    - python3-dev
    
    # KDE applications (can be installed without full desktop)
    - firefox
    - vlc
    - okular
    - ark
    - kate
    - kcalc
    - spectacle
    
    # System utilities
    - ca-certificates
    - gnupg
    - lsb-release
    - software-properties-common
    - apt-transport-https
  
  # Post-installation configuration
  late-commands:
    # Set up sudo access for ucadmin
    - echo 'ucadmin ALL=(ALL) NOPASSWD:ALL' > /target/etc/sudoers.d/ucadmin-nopasswd
    - chmod 440 /target/etc/sudoers.d/ucadmin-nopasswd
    
    # Switch to NetworkManager (disable systemd-networkd)
    - curtin in-target --target=/target -- systemctl disable systemd-networkd
    - curtin in-target --target=/target -- systemctl enable NetworkManager
    
    # Set up console auto-login for first boot only
    - mkdir -p /target/etc/systemd/system/getty@tty1.service.d
    - |
      cat > /target/etc/systemd/system/getty@tty1.service.d/autologin.conf << EOF
      [Service]
      ExecStart=
      ExecStart=-/sbin/agetty --autologin ucadmin --noclear %I \$TERM
      EOF
    
    # Create first-boot setup script
    - |
      cat > /target/home/ucadmin/first-boot-setup.sh << 'EOFSCRIPT'
      #!/bin/bash
      
      # Colors for output
      GREEN='\033[0;32m'
      BLUE='\033[0;34m'
      YELLOW='\033[1;33m'
      NC='\033[0m'
      
      # Check if already run
      if [ -f /home/ucadmin/.setup_completed ]; then
          echo "Setup already completed!"
          exit 0
      fi
      
      echo -e "${BLUE}ðŸ¦„ Welcome to UnicornCommander!${NC}"
      echo "Setting up your AI workstation..."
      echo
      
      # Download UC-1 installer
      echo -e "${YELLOW}Downloading UC-1 AI stack...${NC}"
      cd /home/ucadmin
      if [ ! -d "UC-1" ]; then
          git clone https://github.com/Unicorn-Commander/UC-1.git
          chmod +x UC-1/install_UC-1.sh
      fi
      
      # Ask user what they want to install
      echo
      echo "What would you like to install?"
      echo "1) UC-1 AI Stack only (headless server)"
      echo "2) UC-1 + KDE Desktop Environment" 
      echo "3) Just prepare, I'll install manually later"
      echo
      read -p "Enter choice (1-3): " choice
      
      case $choice in
          1)
              echo -e "${YELLOW}Installing UC-1 AI Stack...${NC}"
              cd UC-1 && ./install_UC-1.sh
              ;;
          2)
              echo -e "${YELLOW}Installing UC-1 AI Stack...${NC}"
              cd UC-1 && ./install_UC-1.sh
              echo -e "${YELLOW}Installing KDE Desktop...${NC}"
              sudo apt update
              sudo apt install -y kde-plasma-desktop sddm
              sudo systemctl enable sddm
              echo "KDE will be available after reboot"
              ;;
          3)
              echo "Setup prepared. To install later:"
              echo "  UC-1 AI Stack: cd UC-1 && ./install_UC-1.sh"
              echo "  KDE Desktop: sudo apt install kde-plasma-desktop sddm"
              ;;
          *)
              echo "Invalid choice. Setup prepared for manual installation."
              ;;
      esac
      
      # Secure the system (disable auto-login)
      echo
      echo -e "${YELLOW}Securing system...${NC}"
      echo "Setting up password-protected login..."
      
      # Remove auto-login
      sudo rm -f /etc/systemd/system/getty@tty1.service.d/autologin.conf
      sudo systemctl daemon-reload
      
      # Remove sudo without password  
      sudo rm -f /etc/sudoers.d/ucadmin-nopasswd
      
      # Mark setup as completed
      touch /home/ucadmin/.setup_completed
      echo "$(date): Setup completed" >> /home/ucadmin/.setup_completed
      
      echo -e "${GREEN}âœ… Setup complete!${NC}"
      echo
      echo "System is now secured with password authentication."
      echo "Reboot to apply all changes: sudo reboot"
      echo
      
      EOFSCRIPT
    
    # Make first-boot script executable and set ownership
    - chmod +x /target/home/ucadmin/first-boot-setup.sh
    - chown 1000:1000 /target/home/ucadmin/first-boot-setup.sh
    
    # Add first-boot script to .bashrc (runs only once)
    - echo '[ -f ~/first-boot-setup.sh ] && ~/first-boot-setup.sh' >> /target/home/ucadmin/.bashrc
    
    # Create a README for the user
    - |
      cat > /target/home/ucadmin/README.txt << EOF
      ðŸ¦„ UnicornCommander Workstation
      
      This system is configured for AI development with:
      â€¢ AMD Ryzen 9 8945HS + Radeon 780M Graphics  
      â€¢ 96GB RAM optimized for large language models
      â€¢ NetworkManager for both ethernet and WiFi
      
      Available Software:
      â€¢ Firefox browser
      â€¢ VLC media player  
      â€¢ Okular document viewer
      â€¢ Ark archive manager
      â€¢ Kate text editor
      â€¢ Spectacle screenshot tool
      â€¢ Calculator
      
      Next Steps:
      1. Run the setup wizard (automatically starts on first login)
      2. Choose: AI Stack only OR AI Stack + KDE Desktop
      3. System will be secured after setup
      
      Manual Commands:
      â€¢ Install UC-1: cd UC-1 && ./install_UC-1.sh
      â€¢ Install KDE: sudo apt install kde-plasma-desktop sddm
      â€¢ Web interfaces (after UC-1 install):
        - Open-WebUI: http://localhost:8080
        - SearXNG: http://localhost:8888
        - Portainer: http://localhost:9000
      
      Login: ucadmin / MagicUnicorn!8-)
      EOF
    
    - chown 1000:1000 /target/home/ucladmin/README.txt
  
  # Reboot after installation
  shutdown: reboot